name: Python CI 

on:
  push:
    branches: [ main ] 
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest 
    strategy:
      matrix:
        python-version: ["3.11"] 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Installer et configurer Poetry (utilise une action communautaire très populaire pour ça)
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true 
          virtualenvs-in-project: true
          installer-parallel: true

      # Mettre en cache les dépendances
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv 
          key: venv-${{ runner.os }}-${{ steps.install-poetry.outputs.full-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      # Linter et Formatter avec Ruff
      - name: Lint and format with Ruff
        run: |
          poetry run ruff check .
          poetry run ruff format --check .

      # Lancer les tests avec Pytest
      - name: Run tests
        run: poetry run pytest
        env:
          OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
          IQAIR_API_KEY: ${{ secrets.IQAIR_API_KEY }}